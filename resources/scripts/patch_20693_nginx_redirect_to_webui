#!/bin/bash
# update-balanced.sh
# Updates the 'balanced' attribute for a RedBorder on this manager node

# Build the node name from the hostname


# Define the balanced array as JSON
# Notice we will keep running the service webui in case nginx is not enabled in that node, but webui is.
BALANCED_JSON='[
  { "service": "nginx",   "name": "nginx",                      "port": 443,  "protocol": "tcp", "redirected_service": "nginx",   "persistence_timeout": 9600 },
  { "service": "webui",   "name": "redborder webui",            "port": 443,  "protocol": "tcp", "redirected_service": "nginx",   "persistence_timeout": 9600 },
  { "service": "f2k",     "name": "netflow,ipfix/sflow daemon", "port": 2055, "protocol": "udp", "redirected_service": "f2k",     "persistence_timeout": 30 },
  { "service": "sfacctd", "name": "sflow daemon",               "port": 6343, "protocol": "udp", "redirected_service": "sfacctd", "persistence_timeout": 30 },
  { "service": "kafka",   "name": "kafka",                      "port": 9092, "protocol": "tcp", "redirected_service": "kafka",   "persistence_timeout": 30 }
]'

NODE_NAME=$(hostname -f)

# Set the node attribute
knife node attribute set "$NODE_NAME" "normal.redborder.manager.balanced" "$BALANCED_JSON" --format json

echo "Updated $NODE_NAME with balanced services."
knife node show $NODE_NAME -l -a "normal.redborder.manager.balanced"
echo "Remember to execute in other nodes if this one is part of a cluster."
