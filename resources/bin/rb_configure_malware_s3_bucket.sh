#!/bin/bash

# Function to generate a random key
generate_random_key() {
  local key_length=$1
  local generated_key=$(tr -dc 'A-Za-z0-9' < /dev/urandom | head -c "$key_length")
  echo "$generated_key"
}

# Create malware s3 bucket
echo "INFO: Creating malware bucket"
mcli mb local/malware
if [ $? -ne 0 ] ; then
  echo "ERROR: Could not create malware bucket, exiting..."
  exit 1
fi

# Get cdomain
if [ -f /etc/redborder/cdomain ]; then
  cdomain=$(head -n 1 /etc/redborder/cdomain | tr '\n' ' ' | awk '{print $1}')
  if [ -z "$cdomain" ]; then
    echo "ERROR: /etc/redborder/cdomain is empty, exiting..."
    exit 1
  fi
else
  echo "ERROR: /etc/redborder/cdomain not found, exiting..."
  exit 1
fi

ACCESS_KEY=$(generate_random_key 20)
SECRET_KEY=$(generate_random_key 40)
BUCKET="malware"
HOST="malware.s3.service.${cdomain}"

# Add malware keys to s3_init_conf.yml
echo "INFO: Adding malware keys to /etc/redborder/s3_malware_init_conf.yml"
cat > /etc/redborder/s3_malware_init_conf.yml <<-_RBEOF_
---
malware:
  access_key: $ACCESS_KEY
  secret_key: $SECRET_KEY
  bucket: $BUCKET
  endpoint: $HOST

_RBEOF_

mkdir -p /var/chef/data/data_bag/rBglobal/

# Add malware keys to passwords databag
echo "INFO: Adding malware keys to /var/chef/data/data_bag/rBglobal/malware-bucket.json"
cat > /var/chef/data/data_bag/rBglobal/malware-bucket.json <<-_RBEOF_
{
  "id": "malware-bucket",
  "s3_malware_access_key_id": "$ACCESS_KEY",
  "s3_malware_secret_key_id": "$SECRET_KEY",
  "s3_malware_bucket": "$BUCKET",
  "s3_malware_host": "$HOST"
}
_RBEOF_

rb_upload_chef_data.sh -f /var/chef/data/data_bag/rBglobal/malware-bucket.json -y
echo "INFO: Running chef-client service to apply changes"
rb_wakeup_chef.sh -c
